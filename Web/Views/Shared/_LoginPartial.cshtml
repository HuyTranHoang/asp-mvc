@using Microsoft.AspNetCore.Identity
@{
    var routeUrl = Url.RouteUrl(ViewContext.RouteData.Values);
    var qsPath = ViewContext.HttpContext.Request.QueryString.Value;
    var returnUrl = $"{routeUrl}{qsPath}";
}

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Manage/Index" class="nav-link" id="manage" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" class="form-inline" id="logoutForm">
                <button class="btn btn-link nav-link" id="logout" type="submit">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Register" class="nav-link @(returnUrl.Contains("/Register") ? "active" : "")" id="register">
                Register
            </a>
        </li>
        <li class="nav-item">
            <a asp-area="Identity" asp-page="/Account/Login" class="nav-link @(returnUrl.Contains("/Login") ? "active" : "") icon-swap" id="login">
                <i class="fa-light fa-right-to-bracket init-icon"></i>
                <i class="fa-light fa-person-to-portal second-icon"></i>
                Login
            </a>
        </li>
    }
</ul>